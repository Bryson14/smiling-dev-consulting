---
import { getCollection } from "astro:content";
import Layout from "@/layouts/main.astro";

interface TagDict {
    name: string;
    count: number;
    linkList: string[];
}

export async function getStaticPaths() {
    const tags: Record<string, TagDict> = {};
    const posts = await getCollection("blog");

    for (const post of posts) {
        for (const tag of post.data.keywords) {
            if (tags[tag]) {
                tags[tag].count += 1;
                tags[tag].linkList.push(post.data.slug);
            } else {
                tags[tag] = { count: 1, name: tag, linkList: [post.data.slug] };
            }
        }
    }

    return Object.entries(tags).map(([name, data]) => ({
        params: { tag: name.toLowerCase() },
        props: { tag: data, posts: posts.filter(post => 
            post.data.keywords.some(keyword => keyword.toLowerCase() === name.toLowerCase())
        )},
    }));
}

const { tag, posts } = Astro.props;
---

<Layout>
    <div class="container mx-auto px-4 py-8 max-w-4xl">
        <!-- Header Section -->
        <div class="mb-8">
            <nav class="text-sm text-gray-500 mb-4">
                <a href="/blog" class="hover:text-teal-600 transition-colors">Blog</a>
                <span class="mx-2">→</span>
                <a href="/blog/tags" class="hover:text-teal-600 transition-colors">Tags</a>
                <span class="mx-2">→</span>
                <span class="text-gray-800 dark:text-gray-200 capitalize">{tag.name}</span>
            </nav>
            
            <div class="flex items-center gap-4 mb-4">
                <h1 class="text-4xl font-bold text-gray-900 dark:text-gray-100 capitalize">
                    {tag.name}
                </h1>
                <span class="bg-teal-100 dark:bg-teal-900 text-teal-800 dark:text-teal-200 px-3 py-1 rounded-full text-sm font-medium">
                    {tag.count} {tag.count === 1 ? 'post' : 'posts'}
                </span>
            </div>
            
            <p class="text-gray-600 dark:text-gray-400 text-lg">
                Exploring all posts tagged with "{tag.name}"
            </p>
        </div>

        <!-- Posts Grid -->
        <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-1">
            {posts.map((post) => (
                <article class="bg-white dark:bg-gray-800 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 p-6 border border-gray-200 dark:border-gray-700">
                    <div class="flex flex-col h-full">
                        <div class="flex-grow">
                            <h2 class="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-3 leading-tight">
                                <a 
                                    href={`/blog/${post.data.slug}`}
                                    class="hover:text-teal-600 dark:hover:text-teal-400 transition-colors"
                                >
                                    {post.data.title}
                                </a>
                            </h2>
                            
                            {post.data.description && (
                                <p class="text-gray-600 dark:text-gray-400 mb-4 line-clamp-3">
                                    {post.data.description}
                                </p>
                            )}
                        </div>
                        
                        <div class="flex items-center justify-between pt-4 border-t border-gray-100 dark:border-gray-700">
                            <div class="flex items-center text-sm text-gray-500 dark:text-gray-400">
                                {post.data.pubDate && (
                                    <time datetime={post.data.pubDate.toISOString()}>
                                        {post.data.pubDate.toLocaleDateString('en-US', {
                                            year: 'numeric',
                                            month: 'long',
                                            day: 'numeric'
                                        })}
                                    </time>
                                )}
                            </div>
                            
                            <div class="flex flex-wrap gap-1">
                                {post.data.keywords.slice(0, 3).map((keyword) => (
                                    <span class="inline-block bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 text-xs px-2 py-1 rounded">
                                        {keyword}
                                    </span>
                                ))}
                                {post.data.keywords.length > 3 && (
                                    <span class="text-xs text-gray-500 dark:text-gray-400 px-2 py-1">
                                        +{post.data.keywords.length - 3} more
                                    </span>
                                )}
                            </div>
                        </div>
                    </div>
                </article>
            ))}
        </div>

        <!-- Back to Tags -->
        <div class="mt-12 text-center">
            <a 
                href="/blog/tags"
                class="inline-flex items-center gap-2 text-teal-600 hover:text-teal-800 dark:hover:text-teal-400 transition-colors font-medium"
            >
                ← View all tags
            </a>
        </div>
    </div>
</Layout>