---
interface Props {
  title: string;
  description?: string;
  url?: string;
  class?: string;
}

const {
  title,
  description = "",
  url = Astro.url.href,
  class: className = ""
} = Astro.props;

const shareData = {
  title: title,
  text: description,
  url: url
};

const platforms = [
  {
    name: 'Twitter',
    url: `https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(url)}`,
    icon: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
      <path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84" />
    </svg>`
  },
  {
    name: 'LinkedIn',
    url: `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`,
    icon: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
      <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
    </svg>`
  }
];
---

<div class:list={["social-share flex items-center space-x-2", className]}>
  <span class="text-sm text-gray-600 dark:text-gray-400">Share:</span>
  <div class="flex items-center space-x-2">
    {platforms.map(platform => (
      <a
        href={platform.url}
        target="_blank"
        rel="noopener noreferrer"
        class="p-2 text-gray-600 hover:text-teal-600 dark:text-gray-400 dark:hover:text-teal-500 transition-colors"
        aria-label={`Share on ${platform.name}`}
        data-platform={platform.name.toLowerCase()}
      >
        <Fragment set:html={platform.icon} />
      </a>
    ))}
    <button
      id="copyLink"
      class="p-2 text-gray-600 hover:text-teal-600 dark:text-gray-400 dark:hover:text-teal-500 transition-colors"
      aria-label="Copy link"
    >
      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3" />
      </svg>
    </button>
  </div>
</div>

<script define:vars={{ shareData }}>
const copyButton = document.getElementById('copyLink');

copyButton?.addEventListener('click', async () => {
  try {
    await navigator.clipboard.writeText(shareData.url);
    
    // Show success tooltip
    const tooltip = document.createElement('div');
    tooltip.textContent = 'Link copied!';
    tooltip.className = 'absolute -top-8 left-1/2 transform -translate-x-1/2 px-2 py-1 bg-gray-900 dark:bg-gray-700 text-white text-xs rounded opacity-0 transition-opacity';
    
    copyButton.style.position = 'relative';
    copyButton.appendChild(tooltip);
    
    // Fade in
    setTimeout(() => tooltip.style.opacity = '1', 0);
    
    // Fade out and remove
    setTimeout(() => {
      tooltip.style.opacity = '0';
      setTimeout(() => tooltip.remove(), 200);
    }, 2000);
    
  } catch (err) {
    console.error('Failed to copy:', err);
  }
});

// Native share API for mobile devices
document.querySelectorAll('.social-share a[data-platform]').forEach(link => {
  link.addEventListener('click', (e) => {
    if (navigator.share) {
      e.preventDefault();
      navigator.share(shareData).catch(console.error);
    }
  });
});
</script>